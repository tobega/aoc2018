composer nodes
  <node>
  rule node: { (def childCount: <INT>;) (<WS>) (def metadataCount: <INT>;) (<WS>) children:[ <node>=$childCount ], metadata:[ <metadata>=$metadataCount ] } (<WS>?)
  rule metadata: <INT> (<WS>?)
end nodes

def root: $IN::lines -> nodes;

//part 1

templates sum
  @: 0;
  $... -> @sum: $@sum + $;
  $@ !
end sum

templates getMetadata
  [ $ -> # ] !

  <{}>
    $.children... -> #
    $.metadata... -> #

  <>
    $ !
end getMetadata

$root -> getMetadata -> sum -> !OUT::write

'
' -> !OUT::write

//part 2

templates nodeValue
  <{children:<[](0)>}>
    $.metadata -> sum !

  <{children:<[](1..)>}>
    def max: $.children::length;
    def childSelector: [$.metadata... -> (<1..$max> $!)];
    [ $.children($childSelector)... -> # ] -> sum !
end nodeValue

$root -> nodeValue -> !OUT::write

