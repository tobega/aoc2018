composer nodes
  <node>
  node: { (def childCount: <INT>) (<WS>) (def metadataCount: <INT>) (<WS>) children:[ <node>=$childCount ], metadata:[ <metadata>=$metadataCount ] } (<WS>?)
  metadata: <INT> (<WS>?)
end nodes

def root: $IN::lines -> nodes

//part 1

templates sum
  @: 0
  $it... -> (@sum: $@sum + $it) -> void
  $@ !
end sum

templates getMetadata
  [ $it -> # ] !

  <{}>
    $it.children... -> #
    $it.metadata... -> #

  <>
    $it !
end getMetadata

$root -> getMetadata -> sum -> !OUT::write

'
' -> !OUT::write

//part 2

templates nodeValue
  <{children:<[](0)>}>
    $it.metadata -> sum !

  <{children:<[](1..)>}>
    def max: $it.children::length
    [ $it.children([$it.metadata... -> (<1..$max> $it!)])... -> # ] -> sum !
end nodeValue

$root -> nodeValue -> !OUT::write

