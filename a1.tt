composer numbers
<INT>
end numbers

def freqdiffs: [ $IN::lines -> numbers ];

templates sum
  @: 0;
  $... -> (@sum: $ + $@sum;) !
  $@ !
end sum

$freqdiffs -> sum -> !OUT::write

processor Set
  templates find
    @: $;
    { start: 1, end: $@Set::length } ->  #
    <?($.end <..~$.start>)>
      -$.start !
    <?($@Set($.start) <$@>)>
      $.start !
    <>
      def mid: ($.start + $.end) / 2;
      {$..., $@Set($mid) -> (<$@find> {start: $mid} ! <..~$@find> {start: $mid + 1} ! <> {end: $mid - 1} !)...} -> #
  end find
  templates add
    def item: $;
    $ -> find -> #
    <..0>
      def pos: -$;
      @Set: [ $@Set(1..($pos-1))..., $item, $@Set($pos..-1)... ];
      1 !
    <>
      0 !
  end add
  @: [];
  $... -> add -> !VOID
end Set

templates findrepeat
  def seen: [0] -> Set;
  @: 0;
  def adds: $;
  [] -> #
  <[](0)>
    [ $adds... -> # ] -> #
  <[](1..)>
    $(1) !

  <>
    @: $ + $@;
    $@ -> seen::add -> (<0> $@findrepeat !) !

end findrepeat

'
' -> !OUT::write

$freqdiffs -> findrepeat -> !OUT::write
