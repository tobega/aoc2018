composer tag
  <'[a-z]+'>
end tag

def tags: [ $IN::lines -> tag ];

templates twosAndThrees
  templates countOne
    @: 1;
    def one: $(1);
    $(2..last) -> \[i](<=$one> @countOne: 1 + $@countOne;  <> $ !\) ->
      { rest: $ } !
    $@ -> \(<=2> { two: 1 }! <=3> { three: 1 }!\) !
  end countOne
  [ $... -> # ] !

  when <'.*'> do
    def chars: [ $... ];
    @: { two: 0, three: 0, rest: $chars };
    $@ -> #

  when <{rest:<[](2..)>}> do
    ..|@: $.rest -> countOne;
    $@ -> #

  otherwise
    { two: $.two, three: $.three } !
end twosAndThrees

templates sumTwosAndThrees
  @: $(1);
  $(2..last)... -> #
  $@ !

  <{}>
    @: { two: $.two + $@.two, three: $.three + $@.three };
end sumTwosAndThrees

// solution to part 1, phew!!!

$tags -> twosAndThrees -> sumTwosAndThrees -> ($.two * $.three) -> !OUT::write

'
' -> !OUT::write

// part 2
templates onediff
  [ $ -> # ] !
  <[](2..)>
    @: [ $(1)... ];
    templates diffs
      @: 0;
      [ $... ] -> \[i](<~=$@onediff($i)> @diffs: 1 + $@diffs;\) -> !VOID
      $ -> \(<?($@diffs<=1>)> '$@onediff...;' ! $ !\) !
    end diffs
    $(2..last)... -> diffs !
    $(2..last) -> #
end onediff

templates collate
  @: [ $(1)... ];
  '$:[ $(2)... ] -> \[i](<=$@collate($i)> $ !\)...;' !
end collate

$tags -> onediff -> collate -> !OUT::write
    
    
